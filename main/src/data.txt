# Extracted Code (.ts, .tsx, .css)
# Date and Time: 2025-07-10 09:03:09
# Files Included: 17

# === lib/utils.ts ===
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

# === lib/data.ts ===
// === lib/data.ts ===
export interface Book {
  id: string;
  title: string;
  price: number;
  imageUrl: string;
  description: string;
}

export const dummyBooks: Book[] = [
  {
    id: "grade-1",
    title: "Champion Creative Activities - Grade 1",
    price: 850,
    imageUrl: "/image1.png",
    description: "Engaging creative activities for Grade 1 learners, fostering imagination and foundational skills. Approved by KICD."
  },
  {
    id: "grade-2",
    title: "Champion Creative Activities - Grade 2",
    price: 900,
    imageUrl: "/image2.png",
    description: "A fun and interactive book to build upon the creative skills of Grade 2 students. Approved by KICD."
  },
  {
    id: "grade-3",
    title: "Champion Creative Activities - Grade 3",
    price: 950,
    imageUrl: "/image3.png",
    description: "Encourages creativity and critical thinking with a variety of activities for Grade 3. Approved by KICD."
  },
  {
    id: "grade-4",
    title: "Champion Creative Arts - Grade 4",
    price: 1000,
    imageUrl: "/image4.png",
    description: "An introduction to the world of creative arts, covering various mediums and techniques for Grade 4. Approved by KICD."
  },
  {
    id: "grade-5",
    title: "Champion Creative Arts - Grade 5",
    price: 1100,
    imageUrl: "/image5.png",
    description: "Develops artistic talents and appreciation with advanced projects and lessons for Grade 5 learners. Approved by KICD."
  },
  {
    id: "grade-6",
    title: "Champion Creative Arts - Grade 6",
    price: 1250,
    imageUrl: "/image6.png",
    description: "A comprehensive guide to creative arts for Grade 6, preparing students for more complex artistic expression. Approved by KICD."
  },
  {
    id: "grade-7",
    title: "Champion Creative Arts and Sports - Grade 7",
    price: 1400,
    imageUrl: "/image7.png",
    description: "An integrated approach to both creative arts and sports, promoting well-rounded development for Grade 7 students. Approved by KICD."
  },
  {
    id: "grade-8",
    title: "Champion Creative Arts and Sports - Grade 8",
    price: 1500,
    imageUrl: "/image8.png",
    description: "Advanced concepts in creative arts and sports to challenge and inspire Grade 8 learners. Approved by KICD."
  }
];

# === app/globals.css ===
@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-sans);
  --font-display: var(--font-display);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.75rem;

  --background: #fdfcf9;
  --foreground: #2e3192;
  
  --card: #ffffffeb;
  --card-foreground: #2e3192;
  
  --popover: #ffffff;
  --popover-foreground: #2e3192;
  
  --primary: #00aaeb;
  --primary-rgb: 0, 170, 235;
  --primary-foreground: #ffffff;
  
  --secondary: #3871c1;
  --secondary-foreground: #ffffff;

  --accent: #2e3192;
  --accent-foreground: #ffffff;
  
  --muted: #f1f1f1;
  --muted-foreground: #3871c199;
  
  --destructive: oklch(0.58 0.24 27.32);
  
  --border: #dfdfe6;
  --input: #eef2f7;
  --ring: #00aaeb;

  --color-brand-primary: #00aaeb;
  --color-brand-secondary: #3871c1;
  --color-brand-tertiary: #2e3192;
  --color-brand-text: #2e3192;
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply text-foreground antialiased;
    background-color: var(--background);
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply font-display uppercase tracking-wider text-balance;
  }
}

.bg-paper-texture {
  background-color: var(--background);
  background-image: url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%239C92AC" fill-opacity="0.03"%3E%3Cpath d="M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E');
}

.text-liquid-ink {
  @apply bg-clip-text text-transparent;
  background-image: linear-gradient(110deg, var(--secondary) 15%, var(--accent) 35%, var(--primary) 65%, var(--secondary) 85%);
  background-size: 300% 100%;
  animation: liquid-flow 8s ease-in-out infinite;
}
@keyframes liquid-flow {
  0% { background-position: 100% 50%; }
  50% { background-position: 0% 50%; }
  100% { background-position: 100% 50%; }
}

.btn-ink-fill {
  position: relative;
  overflow: hidden;
  transition: color 0.5s ease-in-out;
}
.btn-ink-fill::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--primary);
  border-radius: inherit;
  transform: scaleY(0);
  transform-origin: bottom;
  transition: transform 0.5s cubic-bezier(0.87, 0, 0.13, 1);
  z-index: -1;
}
.btn-ink-fill:hover {
  color: var(--primary-foreground);
}
.btn-ink-fill:hover::before {
  transform: scaleY(1);
  transform-origin: top;
}

.has-ink-bloom {
  position: relative;
}
.has-ink-bloom > * {
  z-index: 2;
}
.has-ink-bloom::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(circle, var(--primary) 20%, transparent 80%);
  border-radius: 50%;
  opacity: 0;
  transform: translate(-50%, -50%) scale(0);
  transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1), opacity 0.6s ease;
  z-index: 1;
  filter: blur(10px);
}
.has-ink-bloom:hover::after {
  transform: translate(-50%, -50%) scale(1.5);
  opacity: 0.15;
}

.border-draw::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    border: 2px solid transparent;
    transition: border-color 0.4s ease-out;
}
.border-draw:hover::after {
    border-color: var(--primary);
}

# === app/layout.tsx ===
import type { Metadata } from "next";
import { Oswald, Inter } from "next/font/google";
import "./globals.css";
import { cn } from "@/lib/utils";
import { Header } from "@/components/layout/Header";
import { Footer } from "@/components/layout/Footer";
import { CartProvider } from "@/context/CartContext";
import { Toaster } from "@/components/ui/sonner";

const fontSans = Inter({
  subsets: ["latin"],
  weight: ["300", "400", "500", "600", "700"],
  variable: "--font-sans",
});

const fontDisplay = Oswald({
  subsets: ["latin"],
  weight: ["500", "600", "700"],
  variable: "--font-display",
});

export const metadata: Metadata = {
  title: "Doritex Publishing Investments",
  description: "Your Gateway to Educational Excellence",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={cn(
          "min-h-screen font-sans antialiased bg-paper-texture",
          fontSans.variable,
          fontDisplay.variable
        )}
      >
        <CartProvider>
          <div className="relative flex min-h-dvh flex-col">
            <Header />
            <main className="flex-1">{children}</main>
            <Footer />
          </div>
          <Toaster theme="light" />
        </CartProvider>
      </body>
    </html>
  );
}

# === app/page.tsx ===
"use client";
import { Button } from "@/components/ui/button";
import { BookCard } from "@/components/shared/BookCard";
import { Book, dummyBooks } from "@/lib/data";
import { ArrowRight, BookOpen, Droplet, Edit } from "lucide-react";
import Link from "next/link";
import { motion, Variants } from "framer-motion";

export default function HomePage() {
  const allBooks = dummyBooks;

  const sentence = "Gateway to Educational Excellence.".split(" ");

  const sentenceVariants: Variants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        delay: 0.5,
        staggerChildren: 0.08,
      },
    },
  };

  const letterVariants: Variants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
    },
  };

  return (
    <div className="flex flex-col">
      {/* CREATIVE: The Living Ink Hero */}
      <section className="relative w-full min-h-screen flex items-center justify-center overflow-hidden">
        {/* The spreading ink drop background */}
        <motion.div
          className="absolute inset-0 z-0"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 2 }}
        >
          <div className="absolute top-1/2 left-1/2 w-[150vmax] h-[150vmax] -translate-x-1/2 -translate-y-1/2">
            <motion.div 
              className="w-full h-full rounded-full"
              style={{ background: 'radial-gradient(circle at center, rgba(56, 113, 193, 0.1), rgba(0, 170, 235, 0.05), transparent 70%)' }}
              animate={{ scale: [1, 1.2, 1], rotate: [0, 10, 0] }}
              transition={{ duration: 40, repeat: Infinity, ease: "easeInOut" }}
            />
          </div>
        </motion.div>
        
        <div className="container relative z-10 mx-auto px-4 text-center">
            <div className="max-w-4xl mx-auto">
                <motion.h1
                    className="text-5xl sm:text-7xl font-bold tracking-tighter md:text-8xl"
                    variants={sentenceVariants}
                    initial="hidden"
                    animate="visible"
                >
                    {sentence.map((word, index) => (
                        <motion.span key={word + "-" + index} className="inline-block mr-[0.25em]">
                            {word.split("").map((char, charIndex) => (
                                <motion.span key={char + "-" + charIndex} variants={letterVariants} className={index === 2 || index === 3 ? "text-liquid-ink" : ""}>
                                    {char}
                                </motion.span>
                            ))}
                        </motion.span>
                    ))}
                </motion.h1>
                <motion.p
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.8, delay: 2, ease: [0.22, 1, 0.36, 1] }}
                    className="mt-6 text-lg text-foreground/60 md:text-xl max-w-2xl mx-auto font-sans"
                >
                    A curated collection where every page is a new discovery. Your journey into knowledge begins with a single drop of ink.
                </motion.p>
                <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.8, delay: 2.2, ease: [0.22, 1, 0.36, 1] }}
                    className="mt-10"
                >
                    <Button size="lg" asChild className="border border-primary text-primary font-bold text-base h-16 px-10 rounded-full shadow-lg shadow-primary/20 btn-ink-fill z-10">
                        <Link href="/books">
                            Explore The Collection <ArrowRight className="ml-2 h-5 w-5" />
                        </Link>
                    </Button>
                </motion.div>
            </div>
        </div>
      </section>

      <section className="py-24 md:py-32 relative z-10 bg-background/80 backdrop-blur-sm border-t border-b">
        <div className="container mx-auto px-4">
            <motion.div initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true, amount: 0.3 }} transition={{ duration: 0.8 }} className="text-center max-w-3xl mx-auto">
                <h2 className="text-4xl sm:text-5xl font-bold tracking-tighter">
                    Our Publications
                </h2>
                <p className="text-muted-foreground text-lg mt-4 mb-16 font-sans">
                    Each book is a vessel of knowledge, meticulously crafted from ink and inspiration.
                </p>
            </motion.div>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-x-8 gap-y-16">
                {allBooks.map((book, i) => (
                <motion.div key={book.id} initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true, amount: 0.1 }} transition={{ duration: 0.6, delay: i * 0.05 }}>
                    <BookCard book={book} />
                </motion.div>
                ))}
            </div>
        </div>
      </section>

      {/* CREATIVE: "The Publisher's Mark" About Section */}
      <section id="about" className="py-24 md:py-32 overflow-hidden relative">
        <div className="container mx-auto text-center px-4 relative">
          <motion.div initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true, amount: 0.3 }} transition={{ duration: 0.8 }}>
            <h2 className="text-4xl md:text-5xl font-bold tracking-tighter mb-6">
                The Publisher's Mark
            </h2>
            <p className="max-w-3xl mx-auto text-lg text-foreground/60 leading-relaxed mb-20 font-sans">
                Our philosophy is built on three foundational marks, each representing our commitment to quality, creativity, and growth.
            </p>
          </motion.div>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
            {[
              { icon: BookOpen, title: "Curated Canon", desc: "A focused curriculum, a universe of knowledge." },
              { icon: Droplet, title: "Purity of Ink", desc: "Peer-reviewed publications that are clear and potent." },
              { icon: Edit, title: "The Written Future", desc: "Supporting your lifelong journey of learning." },
            ].map((item, i) => (
              <motion.div
                key={item.title}
                className="group has-ink-bloom p-8 rounded-2xl transition-all duration-300"
                initial={{ opacity: 0, scale: 0.9 }} whileInView={{ opacity: 1, scale: 1 }} viewport={{ once: true }} transition={{ duration: 0.5, delay: 0.2 + i * 0.1}}
              >
                <div className="flex flex-col items-center gap-5">
                  <div className="flex-shrink-0 rounded-full bg-primary/10 p-4 border border-primary/20 transition-all duration-300 group-hover:bg-primary group-hover:scale-110">
                    <item.icon className="h-10 w-10 text-primary transition-all duration-300 group-hover:text-white" />
                  </div>
                  <div>
                    <h3 className="text-xl font-bold mb-2 text-accent">{item.title}</h3>
                    <p className="text-sm text-foreground/60 font-sans leading-relaxed">{item.desc}</p>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
}

# === app/cart/page.tsx ===
"use client";

import { useCart } from "@/context/CartContext";
import { Button } from "@/components/ui/button";
import Image from "next/image";
import Link from "next/link";
import { Minus, Plus, Trash2, ArrowRight } from "lucide-react";
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";

export default function CartPage() {
  const { state, dispatch } = useCart();
  const { items } = state;

  const updateQuantity = (id: string, quantity: number) => {
    dispatch({ type: 'UPDATE_QUANTITY', payload: { id, quantity } });
  };
  
  const removeItem = (id: string) => {
    dispatch({ type: 'REMOVE_ITEM', payload: { id } });
  };

  const subtotal = items.reduce((sum, item) => sum + item.price * item.quantity, 0);
  const shipping = subtotal > 0 ? 5.00 : 0;
  const total = subtotal + shipping;

  return (
    <div className="container mx-auto px-4 py-16 md:py-24">
      <h1 className="text-4xl md:text-5xl font-bold tracking-tighter mb-12">Shopping Cart</h1>
      
      {items.length === 0 ? (
        <div className="text-center py-20 bg-muted/30 rounded-lg">
          <h2 className="text-2xl font-semibold mb-4">Your cart is empty.</h2>
          <p className="text-muted-foreground mb-8">
  Looks like you haven't added any books yet.
</p>

          <Button asChild size="lg" className="bg-primary hover:bg-primary/90 text-primary-foreground font-bold text-base h-14 px-8 rounded-full shadow-lg shadow-white/20 btn-shine">
            <Link href="/books">Explore Books</Link>
          </Button>
        </div>
      ) : (
        <div className="grid lg:grid-cols-3 gap-12">
          <div className="lg:col-span-2 space-y-6">
            {items.map(item => (
              <Card key={item.id} className="flex flex-col sm:flex-row items-start sm:items-center p-4 gap-4 bg-card/80 border-white/10">
                <Image src={item.imageUrl} alt={item.title} width={100} height={150} className="rounded-md object-cover self-center sm:self-start shrink-0" />
                <div className="flex-grow w-full">
                    <h3 className="text-lg font-bold">{item.title}</h3>
                    <p className="text-lg font-bold text-primary mt-2">Kshs {item.price.toFixed(2)}</p>
                </div>
                <div className="flex items-center gap-4 self-stretch sm:self-center justify-end w-full sm:w-auto">
                    <div className="flex items-center border border-input rounded-full p-1">
                        <Button variant="ghost" size="icon" className="rounded-full h-8 w-8" onClick={() => updateQuantity(item.id, item.quantity - 1)}>
                            <Minus className="h-4 w-4" />
                        </Button>
                        <span className="w-8 text-center font-bold">{item.quantity}</span>
                        <Button variant="ghost" size="icon" className="rounded-full h-8 w-8" onClick={() => updateQuantity(item.id, item.quantity + 1)}>
                            <Plus className="h-4 w-4" />
                        </Button>
                    </div>
                    <Button variant="ghost" size="icon" className="text-muted-foreground hover:text-destructive" onClick={() => removeItem(item.id)}>
                        <Trash2 className="h-5 w-5" />
                    </Button>
                </div>
              </Card>
            ))}
          </div>

          <div className="lg:col-span-1">
            <Card className="bg-card/80 backdrop-blur-sm border-white/10 shadow-xl shadow-black/20 sticky top-28">
              <CardHeader>
                <CardTitle className="text-2xl">Order Summary</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4 text-lg">
                <div className="flex justify-between text-muted-foreground"><span>Subtotal</span><span>Kshs {subtotal.toFixed(2)}</span></div>
                <div className="flex justify-between text-muted-foreground"><span>Shipping</span><span>Kshs {shipping.toFixed(2)}</span></div>
                <hr className="border-border" />
                <div className="flex justify-between font-bold text-xl"><span>Total</span><span>Kshs {total.toFixed(2)}</span></div>
              </CardContent>
              <CardFooter>
                 <Button asChild size="lg" className="w-full bg-primary hover:bg-primary/90 text-primary-foreground font-bold text-base h-14 rounded-full shadow-lg shadow-white/20 btn-shine">
                    <Link href="/checkout">
                        Proceed to Checkout <ArrowRight className="ml-2 h-5 w-5" />
                    </Link>
                 </Button>
              </CardFooter>
            </Card>
          </div>
        </div>
      )}
    </div>
  );
}

# === app/login/page.tsx ===
"use client"
import Link from "next/link"
import { motion } from "framer-motion"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"

export default function LoginPage() {
  return (
    <div className="min-h-[80vh] flex items-center justify-center p-4 bg-dot-grid">
      <motion.div
        className="w-full max-w-xl"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, ease: "easeOut" }}
      >
        <Card className="w-full bg-card/80 backdrop-blur-sm border-white/10 shadow-2xl shadow-black/30">
          <CardHeader className="text-center">
            <CardTitle className="text-3xl font-bold">Welcome Back</CardTitle>
            <CardDescription className="text-muted-foreground pt-2">
              Sign in to continue your journey.
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="space-y-2">
              <Label htmlFor="email">Email</Label>
              <Input id="email" type="email" placeholder="you@example.com" />
            </div>
            <div className="space-y-2">
              <Label htmlFor="password">Password</Label>
              <Input id="password" type="password" />
            </div>
          </CardContent>
          <CardFooter className="flex flex-col gap-4">
            <Button className="w-full h-12 bg-primary hover:bg-primary/90 text-primary-foreground font-bold btn-shine">Login</Button>
            <p className="text-sm text-muted-foreground">
                Don&apos;t have an account?{" "}
                <Link href="/register" className="font-semibold text-primary hover:underline">
                    Sign up
                </Link>
                </p>


          </CardFooter>
        </Card>
      </motion.div>
    </div>
  )
}

# === app/books/page.tsx ===
"use client";

import { useState } from 'react';
import { motion } from 'framer-motion';
import { BookCard } from '@/components/shared/BookCard';
import { dummyBooks } from '@/lib/data';
import { Input } from '@/components/ui/input';
import { Search } from 'lucide-react';

export default function BooksPage() {
  const [searchTerm, setSearchTerm] = useState('');

  const filteredBooks = dummyBooks.filter(book => 
    book.title.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: { staggerChildren: 0.07, delayChildren: 0.2 },
    },
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: { y: 0, opacity: 1 },
  };

  return (
    <div className="relative">
      <div className="absolute inset-0 -z-10 bg-dot-grid [mask-image:linear-gradient(to_bottom,white,transparent_80%)]"></div>
      <section className="py-24 md:py-32">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: -30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.7, ease: "easeOut" }}
          >
            <h1 className="text-5xl md:text-6xl font-bold tracking-tighter text-center text-foreground">
              Our Collection
            </h1>
            <p className="text-center text-muted-foreground text-lg mt-4 mb-12 max-w-2xl mx-auto font-sans">
              Search and explore our full range of publications. Your next great read is just a click away.
            </p>
            <div className="max-w-xl mx-auto mb-20 relative">
              <Search className="absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground" />
              <Input 
                placeholder="Search by title..."
                className="pl-12 h-14 text-lg"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </div>
          </motion.div>
          
          <motion.div
            className="grid grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-x-4 gap-y-8 sm:gap-x-8 sm:gap-y-12"
            variants={containerVariants}
            initial="hidden"
            animate="visible"
          >
            {filteredBooks.map((book) => (
              <motion.div key={book.id} variants={itemVariants}>
                <BookCard book={book} />
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>
    </div>
  );
}

# === app/books/[id]/page.tsx ===
"use client";

import { useParams } from 'next/navigation';
import { dummyBooks } from '@/lib/data';
import Image from 'next/image';
import { Button } from '@/components/ui/button';
import { ArrowLeft, ShoppingCart, Minus, Plus } from 'lucide-react';
import { useCart } from '@/context/CartContext';
import { useState } from 'react';
import Link from 'next/link';
import { toast } from 'sonner';

export default function BookDetailPage() {
  const params = useParams();
  const book = dummyBooks.find(b => b.id === params.id);
  const { dispatch } = useCart();
  const [quantity, setQuantity] = useState(1);

  if (!book) {
    return <div className="container py-20 text-center">Book not found.</div>;
  }
  
  const handleAddToCart = () => {
    for(let i = 0; i < quantity; i++) {
        dispatch({ type: 'ADD_ITEM', payload: book });
    }
    toast.success(`${quantity} x ${book.title} added to cart!`);
  }

  return (
    <div className="bg-background relative">
      <div className="absolute inset-0 -z-10 bg-dot-grid [mask-image:radial-gradient(ellipse_at_center,white_20%,transparent_70%)] opacity-30"></div>
      <div className="container mx-auto px-4 py-16 md:py-24">
        <div className="mb-12">
            <Button variant="ghost" asChild>
                <Link href="/books">
                    <ArrowLeft className="mr-2 h-4 w-4" />
                    Back to Collection
                </Link>
            </Button>
        </div>
        <div className="grid md:grid-cols-2 gap-12 lg:gap-20 items-start">
            <div className="relative shadow-2xl shadow-black/50 rounded-lg overflow-hidden">
                <Image
                    src={book.imageUrl}
                    alt={book.title}
                    width={800}
                    height={1200}
                    className="w-full h-auto object-cover"
                />
            </div>
            <div className="flex flex-col">
                <h1 className="text-4xl lg:text-5xl font-bold tracking-tighter text-white mb-3">
                    {book.title}
                </h1>
                <p className="text-4xl font-bold text-foreground my-6 font-sans">
                    Kshs {book.price.toFixed(2)}
                </p>
                <p className="text-foreground/80 leading-relaxed font-sans mb-10">
                    {book.description}
                </p>
                
                <div className="flex items-center gap-4 mb-8">
                    <div className="flex items-center border border-input rounded-full p-1">
                        <Button variant="ghost" size="icon" className="rounded-full" onClick={() => setQuantity(q => Math.max(1, q - 1))}>
                            <Minus className="h-4 w-4" />
                        </Button>
                        <span className="w-12 text-center text-lg font-bold">{quantity}</span>
                        <Button variant="ghost" size="icon" className="rounded-full" onClick={() => setQuantity(q => q + 1)}>
                            <Plus className="h-4 w-4" />
                        </Button>
                    </div>
                    <Button size="lg" className="flex-grow bg-primary hover:bg-primary/90 text-primary-foreground font-bold text-base h-14 rounded-full shadow-lg shadow-white/20 btn-shine" onClick={handleAddToCart}>
                        <ShoppingCart className="mr-2 h-5 w-5" />
                        Add to Cart
                    </Button>
                </div>
            </div>
        </div>
      </div>
    </div>
  );
}

# === app/register/page.tsx ===
"use client"
import Link from "next/link"
import { motion } from "framer-motion"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"

export default function RegisterPage() {
  return (
    <div className="min-h-[80vh] flex items-center justify-center p-4 bg-dot-grid">
      <motion.div
        className="w-full max-w-xl"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, ease: "easeOut" }}
      >
        <Card className="w-full bg-card/80 backdrop-blur-sm border-white/10 shadow-2xl shadow-black/30">
          <CardHeader className="text-center">
            <CardTitle className="text-3xl font-bold">Create Account</CardTitle>
            <CardDescription className="text-muted-foreground pt-2">
              Begin your educational journey with us.
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="space-y-2">
                <Label htmlFor="name">Full Name</Label>
                <Input id="name" placeholder="John Doe" />
            </div>
            <div className="space-y-2">
              <Label htmlFor="email">Email</Label>
              <Input id="email" type="email" placeholder="you@example.com" />
            </div>
            <div className="space-y-2">
              <Label htmlFor="password">Password</Label>
              <Input id="password" type="password" />
            </div>
          </CardContent>
          <CardFooter className="flex flex-col gap-4">
            <Button className="w-full h-12 bg-primary hover:bg-primary/90 text-primary-foreground font-bold btn-shine">Create Account</Button>
            <p className="text-sm text-muted-foreground">
              Already have an account?{" "}
              <Link href="/login" className="font-semibold text-primary hover:underline">
                Login
              </Link>
            </p>
          </CardFooter>
        </Card>
      </motion.div>
    </div>
  )
}

# === app/order/confirmation/page.tsx ===
"use client"
import Link from "next/link"
import { motion } from "framer-motion"
import { Button } from "@/components/ui/button"
import { CheckCircle } from "lucide-react"

export default function OrderConfirmationPage() {
  return (
    <div className="min-h-[80vh] flex items-center justify-center p-4 text-center bg-dot-grid">
      <motion.div
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ duration: 0.5, type: "spring" }}
        className="bg-card/50 backdrop-blur-md p-10 md:p-16 rounded-2xl border border-white/10 shadow-2xl shadow-black/30"
      >
        <CheckCircle className="h-20 w-20 text-primary mx-auto mb-6" />
        <h1 className="text-4xl md:text-5xl font-bold tracking-tighter mb-4">
          Thank You For Your Order!
        </h1>
        <p className="text-lg text-muted-foreground max-w-lg mx-auto mb-10">
          Your order has been placed successfully. You will receive a confirmation email shortly with the order details.
        </p>
        <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button asChild size="lg" className="bg-primary hover:bg-primary/90 text-primary-foreground font-bold text-base h-14 px-8 rounded-full shadow-lg shadow-primary/20 btn-shine">
                <Link href="/books">Continue Shopping</Link>
            </Button>
            <Button asChild variant="outline" size="lg" className="h-14 px-8 rounded-full text-base font-bold">
                <Link href="/profile/orders">View Order History</Link>
            </Button>
        </div>
      </motion.div>
    </div>
  )
}

# === app/checkout/page.tsx ===
"use client"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { useCart } from "@/context/CartContext"
import Image from "next/image"
import { useRouter } from "next/navigation"

export default function CheckoutPage() {
  const { state } = useCart()
  const router = useRouter()
  const { items } = state

  const subtotal = items.reduce((sum, item) => sum + item.price * item.quantity, 0)
  const shipping = subtotal > 0 ? 5.00 : 0
  const total = subtotal + shipping

  const handlePlaceOrder = (e: React.FormEvent) => {
    e.preventDefault();
    router.push('/order/confirmation');
  }

  return (
    <div className="container mx-auto px-4 py-16 md:py-24">
      <h1 className="text-4xl md:text-5xl font-bold tracking-tighter mb-12">Checkout</h1>
      <form onSubmit={handlePlaceOrder} className="grid lg:grid-cols-3 gap-12">
        <div className="lg:col-span-2 space-y-10">
          <Card className="bg-card/80 border-white/10">
            <CardHeader><CardTitle className="text-2xl">Shipping & Delivery</CardTitle></CardHeader>
            <CardContent className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-2"><Label htmlFor="name">Full Name</Label><Input id="name" required /></div>
              <div className="space-y-2"><Label htmlFor="email">Email</Label><Input id="email" type="email" required /></div>
              <div className="col-span-full space-y-2"><Label htmlFor="address">Address</Label><Input id="address" required /></div>
              <div className="space-y-2"><Label htmlFor="city">City</Label><Input id="city" required /></div>
              <div className="space-y-2"><Label htmlFor="zip">ZIP Code</Label><Input id="zip" required /></div>
            </CardContent>
          </Card>
          <Card className="bg-card/80 border-white/10">
            <CardHeader><CardTitle className="text-2xl">M-Pesa Payment</CardTitle></CardHeader>
            <CardContent className="space-y-4">
                <p className="text-muted-foreground text-sm">You will receive an STK Push on your phone to complete the payment.</p>
                <div className="space-y-2">
                    <Label htmlFor="phone">M-Pesa Phone Number</Label>
                    <Input id="phone" placeholder="e.g. 0712345678" required />
                </div>
            </CardContent>
          </Card>
        </div>

        <div className="lg:col-span-1">
          <Card className="bg-card/80 border-white/10 sticky top-28">
            <CardHeader><CardTitle className="text-2xl">Order Summary</CardTitle></CardHeader>
            <CardContent>
              <div className="space-y-4 mb-6">
                {items.map(item => (
                  <div key={item.id} className="flex items-center justify-between text-sm">
                    <div className="flex items-center gap-3">
                        <Image src={item.imageUrl} alt={item.title} width={40} height={60} className="rounded" />
                        <div>
                            <p className="font-semibold">{item.title}</p>
                            <p className="text-muted-foreground">Qty: {item.quantity}</p>
                        </div>
                    </div>
                    <p className="font-semibold">Kshs {(item.price * item.quantity).toFixed(2)}</p>
                  </div>
                ))}
              </div>
              <div className="space-y-2 text-md border-t border-border pt-4">
                <div className="flex justify-between text-muted-foreground"><span>Subtotal</span><span>Kshs {subtotal.toFixed(2)}</span></div>
                <div className="flex justify-between text-muted-foreground"><span>Shipping</span><span>Kshs {shipping.toFixed(2)}</span></div>
                <div className="flex justify-between font-bold text-xl mt-2"><span>Total</span><span>Kshs {total.toFixed(2)}</span></div>
              </div>
            </CardContent>
          </Card>
          <Button type="submit" size="lg" className="w-full mt-8 bg-primary hover:bg-primary/90 text-primary-foreground font-bold text-base h-14 rounded-full shadow-lg shadow-primary/20 btn-shine">
            Place Order
          </Button>
        </div>
      </form>
    </div>
  )
}

# === context/CartContext.tsx ===
"use client";

import { Book } from "@/lib/data";
import React, { createContext, useContext, useReducer, ReactNode } from "react";

interface CartItem extends Book {
  quantity: number;
}

type CartState = {
  items: CartItem[];
};

type CartAction =
  | { type: "ADD_ITEM"; payload: Book }
  | { type: "REMOVE_ITEM"; payload: { id: string } }
  | { type: "UPDATE_QUANTITY"; payload: { id: string; quantity: number } };

const initialState: CartState = {
  items: [],
};

const CartContext = createContext<{
  state: CartState;
  dispatch: React.Dispatch<CartAction>;
}>({
  state: initialState,
  dispatch: () => null,
});

const cartReducer = (state: CartState, action: CartAction): CartState => {
  switch (action.type) {
    case "ADD_ITEM": {
      const existingItem = state.items.find(item => item.id === action.payload.id);
      if (existingItem) {
        return {
          ...state,
          items: state.items.map(item =>
            item.id === action.payload.id
              ? { ...item, quantity: item.quantity + 1 }
              : item
          ),
        };
      }
      return {
        ...state,
        items: [...state.items, { ...action.payload, quantity: 1 }],
      };
    }
    case "REMOVE_ITEM": {
      return {
        ...state,
        items: state.items.filter(item => item.id !== action.payload.id),
      };
    }
    case "UPDATE_QUANTITY": {
      return {
        ...state,
        items: state.items.map(item =>
          item.id === action.payload.id
            ? { ...item, quantity: action.payload.quantity }
            : item
        ).filter(item => item.quantity > 0),
      };
    }
    default:
      return state;
  }
};

export const CartProvider = ({ children }: { children: ReactNode }) => {
  const [state, dispatch] = useReducer(cartReducer, initialState);

  return (
    <CartContext.Provider value={{ state, dispatch }}>
      {children}
    </CartContext.Provider>
  );
};

export const useCart = () => useContext(CartContext);

# === components/shared/BookCard.tsx ===
import React from 'react';
import Image from "next/image";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Book } from "@/lib/data";
import { useCart } from "@/context/CartContext";
import { ShoppingCart } from "lucide-react";
import { motion } from "framer-motion";
import { toast } from "sonner";
import { cn } from '@/lib/utils';

interface BookCardProps {
  book: Book;
}

export function BookCard({ book }: BookCardProps) {
  const { dispatch } = useCart();

  const handleAddToCart = (e: React.MouseEvent) => {
    e.preventDefault();
    dispatch({ type: "ADD_ITEM", payload: book });
    toast.success(`${book.title} added to cart!`);
  };

  return (
    <motion.div
      whileHover="hover"
      className="relative h-full"
    >
      <Link href={`/books/${book.id}`} className="block h-full group" tabIndex={0}>
        <Card className={cn(
          "flex h-full flex-col overflow-hidden rounded-xl relative",
          "bg-card backdrop-blur-lg border shadow-lg shadow-black/5",
          "transition-all duration-300"
        )}>
          <motion.div
            className="absolute -inset-px rounded-xl z-0"
            variants={{
              hover: {
                backgroundPosition: ["0% 50%", "100% 50%", "0% 50%"],
                opacity: 1,
              },
              initial: { opacity: 0 }
            }}
            transition={{
                duration: 2,
                repeat: Infinity,
                ease: "linear",
            }}
            style={{
              background: 'linear-gradient(120deg, var(--secondary), var(--primary), var(--secondary))',
              backgroundSize: '200% 200%',
            }}
          />

          <div className="relative z-10 flex flex-col h-full bg-card rounded-[11px] overflow-hidden">
            <CardHeader className="p-0 relative">
              <div className="aspect-[2/3] w-full overflow-hidden">
                  <motion.div
                    className="w-full h-full"
                    variants={{ hover: { scale: 1.08 } }}
                    transition={{ type: "spring", stiffness: 200, damping: 15 }}
                  >
                    <Image
                      src={book.imageUrl}
                      alt={book.title}
                      width={400}
                      height={600}
                      className="object-cover w-full h-full"
                    />
                  </motion.div>
              </div>
            </CardHeader>
            <CardContent 
              className="flex-grow p-4 flex flex-col bg-transparent"
            >
              <CardTitle className="text-base font-bold leading-snug text-foreground/90 flex-grow group-hover:text-accent transition-colors">{book.title}</CardTitle>
            </CardContent>
            <CardFooter 
              className="flex justify-between items-center p-4 pt-2 bg-transparent"
            >
              <p className="text-base font-bold text-foreground/80 font-sans">Kshs {book.price.toFixed(2)}</p>
              <Button
                size="icon"
                className="bg-accent hover:bg-secondary text-primary-foreground rounded-full h-10 w-10 shrink-0 transition-colors"
                onClick={handleAddToCart}
              >
                <ShoppingCart className="h-5 w-5" />
              </Button>
            </CardFooter>
          </div>
        </Card>
      </Link>
    </motion.div>
  );
}

# === components/layout/Footer.tsx ===
import Link from "next/link";
import { Twitter, Facebook, Linkedin } from "lucide-react";

export function Footer() {
  return (
    <footer className="bg-accent text-white/80 relative overflow-hidden border-t border-white/5">
      <div className="absolute inset-0 opacity-[0.02] bg-dot-grid"></div>
      <div className="container mx-auto relative py-16 px-4">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-12 text-center md:text-left max-w-5xl mx-auto">
          <div className="md:col-span-1">
            <Link href="/" className="inline-block text-2xl font-bold font-display uppercase tracking-widest text-primary">
              Doritex
            </Link>
            <p className="text-sm leading-relaxed mt-4 font-sans max-w-xs mx-auto md:mx-0">
              Your Gateway to Educational Excellence.
            </p>
          </div>
          <div>
            <h4 className="font-bold text-base mb-4 text-white font-display uppercase tracking-wider">
              Links
            </h4>
            <ul className="space-y-3 text-sm font-sans">
              <li><Link href="/" className="hover:text-primary transition-colors">Home</Link></li>
              <li><Link href="/books" className="hover:text-primary transition-colors">Books</Link></li>
              <li><Link href="/#about" className="hover:text-primary transition-colors">About Us</Link></li>
            </ul>
          </div>
          <div>
            <h4 className="font-bold text-base mb-4 text-white font-display uppercase tracking-wider">
              Contact
            </h4>
            <ul className="space-y-3 text-sm font-sans">
              <li><a href="mailto:investments.doritex@gmail.com" className="hover:text-primary transition-colors">investments.doritex@gmail.com</a></li>
              <li><a href="tel: +254 722 316 210" className="hover:text-primary transition-colors">+254 722 316 210</a></li>
            </ul>
          </div>
          <div>
            <h4 className="font-bold text-base mb-4 text-white font-display uppercase tracking-wider">
              Connect
            </h4>
            <div className="flex space-x-4 justify-center md:justify-start">
              <Link href="#" className="hover:text-primary hover:scale-110 transition-all"><Twitter size={22} /></Link>
              <Link href="#" className="hover:text-primary hover:scale-110 transition-all"><Facebook size={22} /></Link>
              <Link href="#" className="hover:text-primary hover:scale-110 transition-all"><Linkedin size={22} /></Link>
            </div>
          </div>
        </div>
        <div className="mt-16 pt-8 border-t border-white/10 text-center text-sm text-white/60 font-sans">
          <p>© {new Date().getFullYear()} Doritex Investments Limited. All Rights Reserved.</p>
          <p className="mt-2">Created by <Link href="https://.com" target="_blank" rel="noopener noreferrer" className="hover:text-primary transition-colors"></Link></p>
        </div>
      </div>
    </footer>
  );
}

# === components/layout/CursorGlow.tsx ===
"use client";

import { useEffect } from 'react';
import { motion, useMotionValue, useSpring } from 'framer-motion';

export const CursorGlow = () => {
    const mouseX = useMotionValue(0);
    const mouseY = useMotionValue(0);

    const springConfig = { damping: 25, stiffness: 300, mass: 0.5 };
    const springX = useSpring(mouseX, springConfig);
    const springY = useSpring(mouseY, springConfig);

    useEffect(() => {
        const handleMouseMove = (e: MouseEvent) => {
            mouseX.set(e.clientX);
            mouseY.set(e.clientY);
        };

        window.addEventListener('mousemove', handleMouseMove);
        return () => {
            window.removeEventListener('mousemove', handleMouseMove);
        };
    }, [mouseX, mouseY]);

    return (
        <motion.div
            id="cursor-glow"
            style={{
                x: springX,
                y: springY,
            }}
        />
    );
};

# === components/layout/Header.tsx ===
"use client";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import {
  Sheet,
  SheetContent,
  SheetTrigger,
  SheetHeader,
  SheetTitle,
  SheetDescription,
} from "@/components/ui/sheet";
import { Menu, ShoppingCart } from "lucide-react";
import { useEffect, useState } from "react";
import { cn } from "@/lib/utils";
import { useCart } from "@/context/CartContext";

const navLinks = [
  { href: "/", label: "Home" },
  { href: "/books", label: "Books" },
  { href: "/#categories", label: "Categories" },
  { href: "/#about", label: "About" },
];

export function Header() {
  const [isOpen, setIsOpen] = useState(false);
  const [hasScrolled, setHasScrolled] = useState(false);
  const { state } = useCart();
  const cartItemCount = state.items.reduce(
    (sum, item) => sum + item.quantity,
    0
  );

  useEffect(() => {
    const handleScroll = () => {
      setHasScrolled(window.scrollY > 20);
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const BrandLogo = () => (
    <Link href="/" className="flex items-center gap-2 group" onClick={() => isOpen && setIsOpen(false)}>
      <span className="text-2xl font-bold font-display uppercase tracking-widest text-primary">
        Doritex
      </span>
    </Link>
  );

  return (
    <header
      className={cn(
        "sticky top-0 z-50 w-full transition-all duration-300",
        hasScrolled
          ? "border-b border-border/20 bg-background/50 backdrop-blur-xl shadow-lg"
          : "border-b border-transparent"
      )}
    >
      <div className="container mx-auto px-4">
        <div className="relative flex h-20 items-center justify-between">
          <div className="flex-shrink-0">
            <BrandLogo />
          </div>

          <nav className="hidden lg:flex absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 items-center gap-8">
            {navLinks.map((link) => (
              <Link
                key={link.label}
                href={link.href}
                className="text-base font-medium text-muted-foreground transition-colors hover:text-foreground link-underline"
              >
                {link.label}
              </Link>
            ))}
          </nav>
          
          <div className="flex items-center gap-4">
            <div className="hidden lg:flex items-center gap-4">
              <Button
                variant="ghost"
                className="text-foreground font-medium rounded-full"
                asChild
              >
                <Link href="/login">Login</Link>
              </Button>
              <Button
                className="bg-primary hover:bg-primary/90 text-primary-foreground font-semibold px-6 rounded-full btn-shine"
                asChild
              >
                <Link href="/register">Sign Up</Link>
              </Button>
            </div>

            <Button
              variant="outline"
              size="icon"
              className="rounded-full relative flex-shrink-0"
              asChild
            >
              <Link href="/cart">
                <ShoppingCart className="h-5 w-5" />
                {cartItemCount > 0 && (
                  <span className="absolute -top-1 -right-1 flex h-5 w-5 items-center justify-center rounded-full bg-destructive text-xs font-bold text-white">
                    {cartItemCount}
                  </span>
                )}
                <span className="sr-only">Shopping Cart</span>
              </Link>
            </Button>
            
            <div className="lg:hidden">
              <Sheet open={isOpen} onOpenChange={setIsOpen}>
                <SheetTrigger asChild>
                  <Button variant="outline" size="icon" className="rounded-full">
                    <Menu className="h-6 w-6" />
                    <span className="sr-only">Open menu</span>
                  </Button>
                </SheetTrigger>
                <SheetContent
                  side="right"
                  className="w-[90%] sm:max-w-sm bg-background/95 backdrop-blur-xl flex flex-col p-0 border-l border-border"
                >
                  <SheetHeader className="p-6 border-b border-border">
                    <SheetTitle asChild>
                      <Link href="/" onClick={() => setIsOpen(false)}>
                        <span className="text-2xl font-bold font-display text-primary">
                          Doritex
                        </span>
                      </Link>
                    </SheetTitle>
                    <SheetDescription className="sr-only">
                      Mobile navigation menu
                    </SheetDescription>
                  </SheetHeader>
                  <nav className="flex flex-col gap-2 text-lg p-4 flex-grow">
                    {navLinks.map((link) => (
                      <Link
                        key={link.label}
                        href={link.href}
                        className="font-semibold text-foreground/80 transition-colors hover:text-primary py-3 rounded-lg px-4 hover:bg-muted"
                        onClick={() => setIsOpen(false)}
                      >
                        {link.label}
                      </Link>
                    ))}
                  </nav>
                  <div className="mt-auto flex flex-col gap-3 p-6 border-t border-border bg-muted/30">
                    <Button
                      variant="outline"
                      size="lg"
                      className="h-12 text-base"
                      onClick={() => setIsOpen(false)}
                      asChild
                    >
                      <Link href="/login">Login</Link>
                    </Button>
                    <Button
                      size="lg"
                      className="bg-primary h-12 text-base text-primary-foreground font-bold btn-shine"
                      onClick={() => setIsOpen(false)}
                      asChild
                    >
                      <Link href="/register">Sign Up</Link>
                    </Button>
                  </div>
                </SheetContent>
              </Sheet>
            </div>
          </div>
        </div>
      </div>
    </header>
  );
}
