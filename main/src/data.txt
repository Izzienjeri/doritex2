An intelligent color replacement has been performed based on your provided scheme. The changes aim to maintain the original design's aesthetic and usability while integrating the new colors.

- **Primary (`#0F1F68`)** has been used for main interactive elements, dark backgrounds, and primary text.
- **Accent (`#0099FF`)** has been applied to secondary actions, highlights, and visual flourishes.
- **Background (`#F5F8FF`)** has been set as the main page background.

Here are the updated files:

# === app/globals.css ===
```css
@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-sans);
  --font-display: var(--font-display);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.75rem;

  --background: #F5F8FF;
  --foreground: #0F1F68;

  --card: #ffffff;
  --card-foreground: #2b2b2b;

  --popover: #ffffff;
  --popover-foreground: #0F1F68;

  --primary: #0F1F68;
  --primary-rgb: 15, 31, 104;
  --primary-foreground: #ffffff;

  --secondary: #0099FF; /* Using accent color */
  --secondary-foreground: #ffffff;

  --accent: #0099FF;
  --accent-foreground: #ffffff;

  --muted: #F0F4FF;
  --muted-foreground: #3B4B9A;

  --destructive: hsl(0 84.2% 60.2%); 

  --border: rgba(15, 31, 104, 0.15); /* Based on new primary */
  --input: #ffffff;
  --ring: #0099FF;
}

@layer base {
  * {
    @apply border-border;
  }
  
  body {
    @apply text-card-foreground antialiased cursor-default overflow-x-hidden;
    background-color: var(--background);
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-display uppercase tracking-wider text-balance text-foreground;
  }
  
  h1 {
    text-shadow: 0 0 60px rgba(var(--primary-rgb), 0.2);
  }
}

body::before {
  content: '';
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background-image: radial-gradient(circle at 15% 20%, rgba(var(--primary-rgb), 0.15), transparent 40%),
                    radial-gradient(circle at 85% 75%, rgba(0, 153, 255, 0.15), transparent 40%);
  z-index: -1;
  animation: float-glow 25s ease-in-out infinite;
  transform-origin: center;
}

@keyframes float-glow {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-40px); }
  100% { transform: translateY(0px); }
}

#cursor-glow {
  position: fixed;
  top: 0;
  left: 0;
  width: 500px;
  height: 500px;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(0, 153, 255, 0.15), transparent 60%);
  pointer-events: none;
  transform: translate(-50%, -50%);
  z-index: 9999;
  filter: blur(50px);
  transition: opacity 0.3s ease;
}

body:hover #cursor-glow {
  opacity: 1;
}

.glass-card {
  @apply bg-white/60 dark:bg-gray-900/60 backdrop-blur-xl border border-white/20 dark:border-white/10 shadow-xl shadow-black/5;
}

.perspective-container {
  perspective: 1000px;
}

.bg-dot-grid {
  background-image: radial-gradient(circle, rgba(15, 31, 104, 0.05) 1px, transparent 1px);
  background-size: 1.25rem 1.25rem;
}

.text-liquid-ink {
  @apply bg-clip-text text-transparent;
  background-image: linear-gradient(110deg, var(--secondary) 15%, var(--accent) 35%, var(--primary) 65%, var(--secondary) 85%);
  background-size: 300% 100%;
  animation: liquid-flow 8s ease-in-out infinite;
}
@keyframes liquid-flow {
  0% { background-position: 100% 50%; }
  50% { background-position: 0% 50%; }
  100% { background-position: 100% 50%; }
}

.link-underline {
  position: relative;
  display: inline-block;
}
.link-underline::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: -4px;
  width: 100%;
  height: 2px;
  background-color: var(--primary);
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.4s cubic-bezier(0.19, 1, 0.22, 1);
}
.link-underline:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}
```

# === app/profile/orders/page.tsx ===
```tsx
"use client";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { dummyOrders } from "@/lib/data";
import { cn } from "@/lib/utils";
import Link from "next/link";
import { ChevronRight } from "lucide-react";

export default function OrderHistoryPage() {
  const orders = dummyOrders;

  if (orders.length === 0) {
    return (
      <div className="text-center py-20 bg-muted rounded-lg border">
        <h2 className="text-2xl font-semibold mb-4 text-foreground">You have no orders yet.</h2>
        <p className="text-muted-foreground mb-8">
          All your future orders will appear here.
        </p>
        <Button asChild size="lg">
          <Link href="/books">Start Shopping</Link>
        </Button>
      </div>
    );
  }

  return (
    <Card className="bg-card/80 border">
      <CardHeader>
        <CardTitle>Your Orders</CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {orders.map((order) => (
            <Link href={`/profile/orders/${order.id}`} key={order.id} className="block border rounded-lg p-4 hover:bg-muted/50 transition-colors">
              <div className="flex justify-between items-center">
                <div className="grid gap-1">
                  <p className="font-bold text-lg text-primary">Order #{order.id}</p>
                  <p className="text-sm text-muted-foreground">Date: {order.date}</p>
                  <p className="text-sm text-muted-foreground">Total: Kshs {order.total.toFixed(2)}</p>
                </div>
                <div className="flex items-center gap-4">
                    <span className={cn(
                        "text-sm font-bold py-1 px-3 rounded-full",
                        order.status === 'Delivered' && 'bg-green-100 text-green-800',
                        order.status === 'Processing' && 'bg-yellow-100 text-yellow-800',
                        order.status === 'Shipped' && 'bg-accent/10 text-primary'
                    )}>
                        {order.status}
                    </span>
                    <ChevronRight className="h-5 w-5 text-muted-foreground" />
                </div>
              </div>
            </Link>
          ))}
        </div>
      </CardContent>
    </Card>
  );
}
```

# === components/layout/Footer.tsx ===
```tsx
import Link from "next/link";
import Image from "next/image";
import { Twitter, Facebook, Linkedin } from "lucide-react";

export function Footer() {
  return (
    <footer className="bg-primary text-white/80 relative overflow-hidden border-t border-white/5">
      <div className="absolute inset-0 opacity-[0.02] bg-dot-grid"></div>
      <div className="container mx-auto relative py-16 px-4">
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-y-10 gap-x-8 max-w-7xl mx-auto">
          
          <div className="sm:col-span-2 lg:col-span-1 text-center sm:text-left">
            <Link href="/" className="inline-block">
              <Image
                src="/logo2.png"
                alt="Doritex Logo"
                width={160}
                height={45}
                className="h-11 w-auto filter brightness-0 invert mx-auto sm:mx-0"
              />
            </Link>
            <p className="text-sm leading-relaxed mt-4 font-sans max-w-xs mx-auto sm:mx-0">
              Your Gateway to Educational Excellence.
            </p>
          </div>

          <div className="text-center sm:text-left">
            <h4 className="font-bold text-base mb-4 text-white font-display uppercase tracking-wider">
              Links
            </h4>
            <ul className="space-y-3 text-sm font-sans">
              <li><Link href="/" className="hover:text-accent transition-colors">Home</Link></li>
              <li><Link href="/books" className="hover:text-accent transition-colors">Books</Link></li>
              <li><Link href="/#about" className="hover:text-accent transition-colors">About Us</Link></li>
            </ul>
          </div>

          <div className="text-center sm:text-left">
            <h4 className="font-bold text-base mb-4 text-white font-display uppercase tracking-wider">
              Contact
            </h4>
            <ul className="space-y-3 text-sm font-sans break-words">
              <li>
                <a href="mailto:investments.doritex@gmail.com" className="hover:text-accent transition-colors">
                  investments.doritex@gmail.com
                </a>
              </li>
              <li>
                <a href="tel:+254722316210" className="hover:text-accent transition-colors">
                  +254 722 316 210
                </a>
              </li>
            </ul>
          </div>
          
          <div className="text-center sm:text-left">
            <h4 className="font-bold text-base mb-4 text-white font-display uppercase tracking-wider">
              Connect
            </h4>
            <div className="flex justify-center sm:justify-start gap-4">
              <Link href="#" className="hover:text-accent hover:scale-110 transition-all"><Twitter size={22} /></Link>
              <Link href="#" className="hover:text-accent hover:scale-110 transition-all"><Facebook size={22} /></Link>
              <Link href="#" className="hover:text-accent hover:scale-110 transition-all"><Linkedin size={22} /></Link>
            </div>
          </div>

        </div>
        
        <div className="mt-16 pt-8 border-t border-white/10 text-center text-sm text-white/60 font-sans">
          <p>© {new Date().getFullYear()} Doritex Investments Limited. All Rights Reserved.</p>
        </div>
      </div>
    </footer>
  );
}
```

# === components/layout/HeroBackground.tsx ===
```tsx
"use client";

import { motion, useMotionValue, animate } from "framer-motion";
import { useEffect } from "react";
import * as flubber from "flubber";

export function HeroBackground() {
  const wave1Paths = [
    "M -10,150 C 250,50 350,250 600,150 S 900,250 1010,150 V 610 H -10 Z",
    "M -10,150 C 200,100 450,200 600,150 S 850,100 1010,150 V 610 H -10 Z",
    "M -10,150 C 250,50 350,250 600,150 S 900,250 1010,150 V 610 H -10 Z",
  ];

  const wave2Paths = [
    "M -10,180 C 200,100 300,280 550,180 S 850,100 1010,160 V 610 H -10 Z",
    "M -10,180 C 250,150 400,230 550,180 S 800,150 1010,160 V 610 H -10 Z",
    "M -10,180 C 200,100 300,280 550,180 S 850,100 1010,160 V 610 H -10 Z",
  ];

  const wave1 = useMotionValue(wave1Paths[0]);
  const wave2 = useMotionValue(wave2Paths[0]);

  useEffect(() => {
    const wave1Interpolators = wave1Paths.map((_, i) =>
      flubber.interpolate(wave1Paths[i], wave1Paths[(i + 1) % wave1Paths.length])
    );

    const wave2Interpolators = wave2Paths.map((_, i) =>
      flubber.interpolate(wave2Paths[i], wave2Paths[(i + 1) % wave2Paths.length])
    );

    let wave1Index = 0;
    let wave2Index = 0;

    const loopWave = (
      interpolators: ((t: number) => string)[],
      motionValue: typeof wave1,
      indexSetter: (val: number) => void,
      indexGetter: () => number,
      duration = 4000
    ) => {
      const current = indexGetter();
      const next = (current + 1) % interpolators.length;

      animate(0, 1, {
        duration: duration / 1000,
        onUpdate: (t) => {
          motionValue.set(interpolators[current](t));
        },
        onComplete: () => {
          indexSetter(next);
          loopWave(interpolators, motionValue, indexSetter, indexGetter, duration);
        },
      });
    };

    loopWave(wave1Interpolators, wave1, (v) => (wave1Index = v), () => wave1Index);
    loopWave(wave2Interpolators, wave2, (v) => (wave2Index = v), () => wave2Index);
  }, []);

  return (
    <div className="absolute inset-0 z-0 w-full h-full overflow-hidden bg-primary">
      <svg
        className="w-full h-full"
        viewBox="0 0 1000 600"
        preserveAspectRatio="xMidYMid slice"
      >
        <defs>
          <linearGradient id="waveGradient1" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" style={{ stopColor: "rgba(0, 153, 255, 0.5)" }} />
            <stop offset="100%" style={{ stopColor: "rgba(15, 31, 104, 0.3)" }} />
          </linearGradient>
          <linearGradient id="waveGradient2" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" style={{ stopColor: "rgba(0, 153, 255, 0.3)" }} />
            <stop offset="100%" style={{ stopColor: "rgba(15, 31, 104, 0.4)" }} />
          </linearGradient>
        </defs>

        <motion.path fill="url(#waveGradient1)" d={wave1} />
        <motion.path fill="url(#waveGradient2)" d={wave2} />
      </svg>
    </div>
  );
}
```